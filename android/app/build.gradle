def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new FileNotFoundException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.firebase-perf'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
//    compileSdkVersion 33
////    compileSdkVersion flutter.compileSdkVersion

//    compileSdkVersion flutter.compileSdkVersion
    compileSdkVersion 33
    ndkVersion flutter.ndkVersion
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    dependencies {
        // Import the Firebase BoM
        implementation platform('com.google.firebase:firebase-bom:28.1.0')
        implementation "androidx.lifecycle:lifecycle-viewmodel:2.5.1"
        implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1"
        implementation 'com.google.firebase:firebase-perf:20.4.0'

        // Add the dependency for the Firebase SDK for Google Analytics
        // When using the BoM, don't specify versions in Firebase dependencies
//        implementation 'com.google.firebase:firebase-analytics'

        implementation ('com.google.firebase:firebase-iid:21.1.0') {
            transitive = true
        }
//        implementation 'com.google.code.gson:gson:2.9.0'
//        implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1"
//        implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
//        implementation 'androidx.appcompat:appcompat:1.6.1'
//        implementation 'androidx.lifecycle:lifecycle-viewmodel:2.6.1'
//
//        implementation "android.arch.lifecycle:extensions:1.1.1"
//        implementation 'com.google.firebase:firebase-perf'
//        implementation  'com.google.gms:google-services:4.3.15'
//        implementation "androidx.core:core-ktx:1.9.0"
        // Add the dependencies for any other desired Firebase products
        // https://firebase.google.com/docs/android/setup#available-libraries
    }


    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.app.nextapp"
        minSdkVersion 21
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }
//    configurations {
//        all {
//            exclude group: 'androidx.lifecycle', module: 'lifecycle-viewmodel-ktx'
//        }
//    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug

        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.multidex:multidex:2.0.1'
//    implementation 'com.google.code.gson:gson:2.8.7'
}
